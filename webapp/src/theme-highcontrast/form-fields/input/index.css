/* stylelint-disable selector-max-class */
@import "./properties.css";

.input {
  display: flex;
}

.input,
.input * {
  box-sizing: border-box;
}

.boxContainer {
  flex: 1;
}

.disabled,
.container > input:disabled,
.container > textarea:disabled {
  cursor: not-allowed;
}

.disabled .container {
  border-bottom: var(--input-container-disabled-border-bottom);
  border-radius: var(--input-container-disabled-border-radius);
}

.disabled .secondaryText {
  color: var(--input-color-disabled);
}

.container {
  position: relative;
  padding-top: var(--input-container-padding);
}

.container * {
  font-family: var(--input-font-family);
  letter-spacing: var(--input-container-letter-spacing);
}

.container > textarea,
.container > input {
  display: block;
  min-width: 100%;
  border: none;
  border-bottom: var(--input-textarea-border-bottom);
  border-radius: var(--input-textarea-border-radius);
  font-size: var(--input-font-size);
  caret-color: var(--input-textarea-caret-default-color);
  background: none;
}

.container > input {
  padding-top: var(--input-padding-top);
  padding-bottom: var(--input-padding-bottom);
}

.container > textarea {
  padding: 0;
  margin: 0;
  resize: none;
  z-index: 1;
  position: absolute;
  height: var(--input-textarea-height);
  overflow: hidden;
}

.container > textarea:disabled,
.container > input:disabled {
  border: var(--input-textarea-disabled-border);
}

.container > textarea:disabled ~ label,
.container > input:disabled ~ label {
  color: var(--input-color-disabled);
}

.container > textarea::placeholder,
.container > input::placeholder {
  opacity: var(--input-textarea-placeholder-opacity);
}

.container > textarea:focus::placeholder,
.container > input:focus::placeholder {
  opacity: var(--input-textarea-focus-placeholder-opacity);
  color: var(--input-textarea-focus-placeholder-color);
  font-size: var(--input-font-size);
}

.container > label {
  color: var(--input-label-color);
  font-size: var(--input-label-font-size-default);
  white-space: nowrap;
  position: absolute;
  top: var(--input-label-top);
  pointer-events: none;
  transition: var(--input-label-transition-time) ease all;
}

.container > textarea:focus,
.container > input:focus {
  border-bottom-color: var(--input-textarea-focus-border-color);
  border-radius: var(--input-textarea-border-radius);
  transition: border-color var(--input-textarea-focus-transition-time) ease;
  outline: none;
}

.container > textarea:focus ~ label,
.container > input:focus ~ label {
  top: var(--input-textarea-label-top);
  font-size: var(--input-label-font-size-focus);
  color: var(--input-label-color-focus);
}

.container .contentPresent {
  top: var(--input-multiline-content-present-top);
  font-size: var(--input-label-font-size-focus);
}

.icon {
  padding-top: var(--input-icon-padding);
  margin-right: var(--input-icon-margin);
  color: var(--input-icon-inactive-color);
}

.disabled .icon {
  color: var(--input-color-disabled);
}

.active .icon {
  color: var(--input-icon-active-color);
}

.displayPasswordIcon {
  position: absolute;
  right: var(--input-display-password-icon-right);
  bottom: var(--input-display-password-icon-bottom);
  cursor: pointer;
}

.secondaryText {
  width: 100%;
  font-size: var(--input-secondary-text-font-size);
  text-align: left;
  margin: 0;
  margin-top: var(--input-secondary-text-margin-top);
  color: var(--input-label-color);
}

.multiline {
  height: auto;
  padding-top: var(--input-container-textarea-padding-top);
}

.multiline > .expander {
  white-space: pre-wrap;
  visibility: hidden;
  min-height: var(--input-multiline-expander-min-height);
  word-wrap: break-word;
}

.multiline > .expander,
.multiline textarea {
  font-size: var(--input-multiline-font-size);
  line-height: var(--input-multiline-line-height);
  padding-bottom: var(--input-multiline-padding-bottom);
  padding-left: var(--input-multiline-padding-left);
  padding-right: var(--input-multiline-padding-right);
  word-break: break-word;
}

.error textarea:focus ~ label,
.error input:focus ~ label,
.error .secondaryText,
.error .contentPresent {
  color: var(--input-color-error);
}

.error textarea,
.error input,
.error textarea:focus,
.error input:focus {
  border-bottom-color: var(--input-color-error);
  caret-color: var(--input-color-error);
}

.success textarea:focus ~ label,
.success input:focus ~ label,
.success .secondaryText,
.success .contentPresent {
  color: var(--input-color-success);
}

.success textarea,
.success input,
.success textarea:focus,
.success input:focus {
  border-bottom-color: var(--input-color-success);
  caret-color: var(--input-color-success);
}
